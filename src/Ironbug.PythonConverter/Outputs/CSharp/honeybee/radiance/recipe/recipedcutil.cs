//Generated by Ironbug.PythonConverter
namespace Honeybee.Radiance.Recipe
{
	// this is a default static class for holding Valuables and Functions
	public static class Recipedcutil
	{


		// this is a Function
		public static object RGBMatrixFileToIll(object Input, object Output)
		{
			return base.RGBMatrixFileToIll(Input, Output);
		}

		// this is a Function
		public static object _getCommandsDaylightCoeff(int WindowGroupCount = 0, object WindowGroupfiles, bool ReuseDaylightMtx = False, object Counter, bool RadiationOnly = False)
		{
			return base._getCommandsDaylightCoeff(WindowGroupCount, WindowGroupfiles, ReuseDaylightMtx, Counter, RadiationOnly);
		}

		// this is a Function
		public static object CoeffMatrixCommands(object PointsFile, object NumberOfPoints, object RfluxmtxParameters)
		{
			return base.coeffMatrixCommands(PointsFile, NumberOfPoints, RfluxmtxParameters);
		}

		// this is a Function
		public static object CreateReferenceMapCommand(object View, object ViewFile, object Outputfolder, object OctreeFile)
		{
			return base.createReferenceMapCommand(View, ViewFile, Outputfolder, OctreeFile);
		}

		// this is a Function
		public static object FinalMatrixAddition(object Skymtx, object Skydirmtx, object Sunmtx, object Output)
		{
			return base.finalMatrixAddition(Skymtx, Skydirmtx, Sunmtx, Output);
		}

		// this is a Function
		public static object FinalMatrixAdditionRadiation(object Skydifmtx, object Sunmtx, object Output)
		{
			return base.finalMatrixAdditionRadiation(Skydifmtx, Sunmtx, Output);
		}

		// this is a Function
		public static object GetCommandsRadiationSky(bool Reuse = True)
		{
			return base.getCommandsRadiationSky(Reuse);
		}

		// this is a Function
		public static object GetCommandsSceneDaylightCoeff(bool ReuseDaylightMtx = False, int TotalCount = 1, bool RadiationOnly = False)
		{
			return base.getCommandsSceneDaylightCoeff(ReuseDaylightMtx, TotalCount, RadiationOnly);
		}

		// this is a Function
		public static object GetCommandsSky(bool Reuse = True)
		{
			return base.getCommandsSky(Reuse);
		}

		// this is a Function
		public static object GetCommandsWGroupsDaylightCoeff(bool ReuseDaylightMtx = False, int TotalCount = 1, bool RadiationOnly = False)
		{
			return base.getCommandsWGroupsDaylightCoeff(ReuseDaylightMtx, TotalCount, RadiationOnly);
		}

		// this is a Function
		public static object ImageBasedViewCoeffMatrixCommands(object RfluxmtxParameters)
		{
			return base.imageBasedViewCoeffMatrixCommands(RfluxmtxParameters);
		}

		// this is a Function
		public static object ImageBasedViewMatrixCalculation(string Extention = "", int Digits = 3)
		{
			return base.imageBasedViewMatrixCalculation(Extention, Digits);
		}

		// this is a Function
		public static object ImageBasedViewSamplingCommands(object ProjectFolder, object View, object ViewFile, object VwraysParameters)
		{
			return base.imageBasedViewSamplingCommands(ProjectFolder, View, ViewFile, VwraysParameters);
		}

		// this is a Function
		public static object ImagedBasedSunCoeffMatrixCommands(object OutputFilenameFormat, object View, object ViewRaysFile, object SceneFiles, object Analemma, object Sunlist)
		{
			return base.imagedBasedSunCoeffMatrixCommands(OutputFilenameFormat, View, ViewRaysFile, SceneFiles, Analemma, Sunlist);
		}

		// this is a Function
		public static object MatrixCalculation(object VMatrix, object TMatrix, object DMatrix, object SkyMatrix)
		{
			return base.matrixCalculation(VMatrix, TMatrix, DMatrix, SkyMatrix);
		}

		// this is a Function
		public static void SkyReceiver(object GroundFileFormat, object SkyFileFormat)
		{
			base.skyReceiver(GroundFileFormat, SkyFileFormat);
		}

		// this is a Function
		public static object SkymtxToGendaymtx(object SkyMatrix, object TargetFolder)
		{
			return base.skymtxToGendaymtx(SkyMatrix, TargetFolder);
		}

		// this is a Function
		public static object SunCoeffMatrixCommands(object Output, object PointFile, object SceneFiles, object Analemma, object Sunlist, object IrradianceCalc)
		{
			return base.sunCoeffMatrixCommands(Output, PointFile, SceneFiles, Analemma, Sunlist, IrradianceCalc);
		}

		// this is a Function
		public static object SunMatrixCalculation(object DcMatrix, object SkyMatrix)
		{
			return base.sunMatrixCalculation(DcMatrix, SkyMatrix);
		}

		// this is a Function
		public static object WindowGroupToReceiver(string MaterialName = vmtx_glow)
		{
			return base.windowGroupToReceiver(MaterialName);
		}

		// this is a Function
		public static object WriteRadFilesDaylightCoeff(object WorkingDir, object ProjectName, object Opq, object Glz, object Wgs)
		{
			return base.writeRadFilesDaylightCoeff(WorkingDir, ProjectName, Opq, Glz, Wgs);
		}

	}//end of default static class




} //namespace

